MODULE      CPU
TITLE      'Caltech10 CPU Test Vectors'


" Description:  These are the test vectors for the Caltech10 CPU.  This is a
"               Harvard architecture CPU and as such has separate program and
"               data address and data busses.  The program bus is read only
"               and has no control signals.  It has 13 bits of address and 16
"               bits of data.  The data bus is read/write and has separate
"               read and write signals along with a Memory/IO signal to
"               indicate if memory or I/O is being accessed.  The bus has 8
"               bits of address and 8 bits of data.  On reset the program
"               counter is set to 0.
"
"               These vectors test the IN and OUT instructions.
"
" Inputs:         ProgramDB[15..0]  - the 16-bit program data bus
"                 Reset             - system reset signal
"                 Clock             - system clock
"
" I/O:            DataDB[7..0]      - the 8-bit data data bus
"
" Outputs:        ProgramAB[12..0]  - the 13-bit program address bus
"                 DataAB[7..0]      - the 8-bit data address bus
"                 RD                - read signal for the data data bus
"                 WR                - write signal for the data data bus
"                 IO                - memory (0) or I/O (1) is being accessed
"
" Status Outputs: Accum[7..0]       - the 8-bit accumulator
"                 Flags[7..0]       - the 8-bit flag register
"                 XReg[7..0]        - the 8-bit X register
"                 SReg[7..0]        - the 8-bit S register


" Revision History:
" 11/05/17   Glen George  Initial Revision



" Pin/Signal Declarations

" Inputs

ProgramDB15..ProgramDB0	pin;	"input  16-bit instruction data bus
Reset           	pin;	"input  system reset signal
Clock           	pin;	"input  system clock


" I/O

DataDB7..DataDB0	pin;	"I/O  8-bit Data data bus


" Outputs

ProgramAB12..ProgramAB0	pin;	"output  the 13-bit Program address bus
DataAB7..DataAB0	pin;	"output  the 8-bit Data address bus
RD			pin;	"output  read signal for the Data data bus
WR			pin;	"output  write signal for the Data data bus
IO			pin;	"output  accessing memory (0) or I/O (1)


" Status Outputs

Accum7..Accum0		pin;	"the accumulator
Flags7..Flags0		pin;	"the flags
XReg7..XReg0		pin;	"the X register
SReg7..SReg0		pin;	"the S register
Test7..Test0		pin;


" Busses

ProgramAB  =  [ProgramAB12..ProgramAB0];"Program address bus
ProgramDB  =  [ProgramDB15..ProgramDB0];"16-bit instruction data bus
DataAB     =  [DataAB7..DataAB0];	"Data address bus
DataDB     =  [DataDB7..DataDB0];	"Data data bus
Accum      =  [Accum7..Accum0];		"the accumulator
Flags      =  [Flags7..Flags0];		"flags from the ALU
XReg       =  [XReg7..XReg0];		"X register
SReg       =  [SReg7..SReg0];		"S register



" Test Vectors

" try some instructions to test the design

TEST_VECTORS ( [ Reset, Clock, ProgramDB, DataDB ] ->
               [ ProgramAB, DataAB, RD, WR, IO, DataDB ] )

" ; reset and test IN and OUT instructions

[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " reset CPU
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 0, 0, ^HC37F, ^HA9 ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JMP	$037F
[ 0, 1, ^HC37F, ^H55 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;jump to 037F so know address
[ 0, 0, ^H4700, ^H98 ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ANDI	$0
[ 0, 1, ^H4700, ^H92 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;reset all flags except Z
[ 0, 0, ^H905A, ^HF4 ] -> [ ^H037F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    IN	$5A
[ 0, 1, ^H905A, ^H87 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;input 74 from 5A
[ 0, 0, ^H0E00, ^H74 ] -> [ ^H0380, ^H5A,  1 ,  0 ,  1 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H74 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;be sure flags weren't changed
[ 0, 0, ^H47EF,  .Z. ] -> [ ^H0381, ^HFF,  0 ,  1 ,  0 , ^H01 ]; "    ANDI	$EF
[ 0, 1, ^H47EF, ^HA3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;change accumulator to 64
[ 0, 0, ^HB0A5, ^HDA ] -> [ ^H0382,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    OUT	$A5
[ 0, 1, ^HB0A5, ^HB3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;output 64 to A5
[ 0, 0, ^H891A,  .Z. ] -> [ ^H0383, ^HA5,  0 ,  1 ,  1 , ^H64 ]; "    LDI	$1A
[ 0, 1, ^H891A, ^HA4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 1A into accumulator
[ 0, 0, ^HB0F3, ^H70 ] -> [ ^H0384,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    OUT	$F3
[ 0, 1, ^HB0F3, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;output 1A to F3
[ 0, 0, ^H9072,  .Z. ] -> [ ^H0385, ^HF3,  0 ,  1 ,  1 , ^H1A ]; "    IN	$72
[ 0, 1, ^H9072, ^HC7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;input 96 from 72
[ 0, 0, ^H0E00, ^H96 ] -> [ ^H0386, ^H72,  1 ,  0 ,  1 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H96 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;be sure flags weren't changed
[ 0, 0, ^HA00A,  .Z. ] -> [ ^H0387, ^HFE,  0 ,  1 ,  0 , ^H00 ]; "    STD	$0A
[ 0, 1, ^HA00A, ^H44 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 96 is written to 0A
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H0388, ^H0A,  0 ,  1 ,  0 , ^H96 ]; "    NOP
[ 0, 1, ^H1F80, ^HB1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;NOP to get last vector output


END  CPU
